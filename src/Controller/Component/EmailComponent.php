<?php
/**
 * @Author: Preview ICT Ltd.
 * @URI: http://previewict.com
 * @description: This component is creating doing the some extra work.
 */
namespace App\Controller\Component;
use Aura\Intl\Exception;
use Cake\Controller\Component;
use Cake\Core\Configure;
use Cake\Mailer\Email;
use Cake\ORM\TableRegistry;
use App\Controller\AppController;

class EmailComponent extends Component
{
    public $name = 'Email';

    protected $configuration ;

    protected $transporter = 'default';

    public function initialize(array $config)
    {
        parent::initialize($config); // TODO: Change the autogenerated stub

        //$emailTransporter = Email::configured();
        //$this->transporter = $emailTransporter[sizeof($emailTransporter) - 1];
    }

    public function generalEmail($to)
    {
        $app = new AppController();
        $subject = 'Create Account Confirmation - '.$app->appsName;
        Email::config('smtp_transporter', [
            'className' => 'Smtp',
            'host' => 'ssl://smtp.gmail.com',
            'port' => 465,
            'timeout' => 30,
            'username' => 'sohel@previewtechs.com',
            'password' => 'runwithlight',
            'client' => null,
            'tls' => null,
            'url' => env('EMAIL_TRANSPORT_DEFAULT_URL', null),
        ]);
        //var_dump(Email::configured()); die();
        $email = new Email('smtp_transporter');
        //$email->set();

        $user = array(
            'to' => $to,
            'name' => 'Sohel Rana'
        );

        $data = array(
            'user' => $user,
            'appName'=> $app->appsName,
        );

        try{
            $email->from([$app->emailFrom => $app->appsName])
                ->to($user['to'])
                ->subject($subject)
                ->theme($app->currentTheme)
                ->template('general')
                ->emailFormat('html')
                ->set(['data' => $data])
                ->send();
        }
        catch (\Exception $e)
        {
            var_dump($e->getMessage()); die();
        }
    }

    public function welcomeEmail()
    {
        $app = new AppController();
        $subject = 'Installation Completed - '.$app->appsName;
        $email = new Email($this->transporter);

        $user = array(
            'to' => 'me.sohelrana@gmail.com',
            'name' => 'Sohel Rana'
        );

        $data = array(
            'user' => $user,
            'appName'=> $app->appsName,
        );

        try{
            $email->from([$app->emailFrom => $app->appsName])
                ->to($user['to'])
                ->subject($subject)
                ->theme($app->currentTheme)
                ->template('general')
                ->emailFormat('html')
                ->set(['data' => $data])
                ->send();
        }
        catch (\Exception $e)
        {
            var_dump($e->getMessage()); die();
        }
    }

    /**
     * @param $data
     * @param $code
     */
    public function signupConfirmEmail($data, $code)
    {
        $app = new AppController();
        $subject = 'Create Account Confirmation - '.$app->appsName;
        $email = new Email('default');
        $link = $app->baseUrl.'/users/verify_email?code='.$code;

        $user = array(
            'to' => $data['username'],
            'name' => $data['profile']['first_name']. ' '.$data['profile']['last_name']
        );

        $data = array(
            'user' => $user,
            'appName'=> $app->appsName,
            'link'=> $link
        );

        $email->from([$app->emailFrom => $app->appsName])
            ->to($user['to'])
            ->subject($subject)
            ->theme($app->currentTheme)
            ->template('signup_confirmation')
            ->emailFormat('html')
            ->set(['data' => $data])
            ->send();
    }

    /**
     * @param $data
     * @param $code
     */
    public function forgotPassEmail($data, $code)
    {
        $app = new AppController();
        $subject = 'Forgot Password Link - '.$app->appsName;
        $email = new Email('default');
        $link = $app->baseUrl.'/users/reset_password?code='.$code;

        $user = array(
            'to' => $data['username'],
            'name' => $data['profile']['first_name']. ' '.$data['profile']['last_name']
        );

        $data = array(
            'user' => $user,
            'appName'=> $app->appsName,
            'link'=> $link
        );

        $email->from([$app->emailFrom => $app->appsName])
            ->to($user['to'])
            ->subject($subject)
            ->theme($app->currentTheme)
            ->template('forgot_password')
            ->emailFormat('html')
            ->set(['data' => $data])
            ->send();
    }

    /**
     * @param $data
     */
    public function passwordChangedEmail($data)
    {
        $app = new AppController();
        $subject = 'Password Changed - '.$app->appsName;
        $email = new Email('default');

        $user = array(
            'to' => $data['username'],
            'name' => $data['profile']['first_name']. ' '.$data['profile']['last_name']
        );

        $data = array(
            'user' => $user,
            'appName'=> $app->appsName,
        );

        $email->from([$app->emailFrom => $app->appsName])
            ->to($user['to'])
            ->subject($subject)
            ->theme($app->currentTheme)
            ->template('changed_password')
            ->emailFormat('html')
            ->set(['data' => $data])
            ->send();
    }
}
